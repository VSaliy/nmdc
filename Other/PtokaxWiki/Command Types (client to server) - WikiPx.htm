<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0050)http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
				
		<meta name="generator" content="DokuWiki Release 2009-02-14b">
<meta name="robots" content="index,follow">
<meta name="date" content="2010-05-25T20:51:56+0200">
<meta name="keywords" content="misc,dcprotocol,c2s">
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.ptokax.ch/lib/exe/opensearch.php" title="WikiPx">
<link rel="start" href="http://wiki.ptokax.ch/">
<link rel="contents" href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s?do=index" title="Index">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://wiki.ptokax.ch/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://wiki.ptokax.ch/feed.php?mode=list&ns=misc:dcprotocol">
<link rel="alternate" type="text/html" title="Plain HTML" href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s?do=export_xhtml">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s?do=export_raw">
<link rel="stylesheet" media="all" type="text/css" href="./Command Types (client to server) - WikiPx_files/css.php">
<link rel="stylesheet" media="screen" type="text/css" href="./Command Types (client to server) - WikiPx_files/css(1).php">
<link rel="stylesheet" media="print" type="text/css" href="./Command Types (client to server) - WikiPx_files/css(2).php">
<script type="text/javascript" charset="utf-8" src="./Command Types (client to server) - WikiPx_files/js.php"></script><style type="text/css"></style>
		<title>Command Types (client to server) - WikiPx</title>
					<link rel="shortcut icon" href="http://wiki.ptokax.ch/lib/tpl/monobook/user/favicon.ico">
				<style type="text/css" media="screen,projection">/*<![CDATA[*/ @import "/lib/tpl/monobook/monobook/main.css"; /*]]>*/</style>

		<link rel="stylesheet" type="text/css" media="print" href="./Command Types (client to server) - WikiPx_files/commonPrint.css">
		<link rel="stylesheet" type="text/css" media="print" href="./Command Types (client to server) - WikiPx_files/print.css">

		<script type="text/javascript" src="./Command Types (client to server) - WikiPx_files/wikibits.js"></script>
		<style type="text/css" media="screen,projection">/*<![CDATA[*/
		@import "/lib/tpl/monobook/wikipedia/en/Common.css";
		@import "/lib/tpl/monobook/wikipedia/en/Monobook.css";
		@import "/lib/tpl/monobook/dokuwiki/doku.css";
		@import "/lib/tpl/monobook/lang/en/lang.css";
		@import "/lib/tpl/monobook/user/Common.css";
		@import "/lib/tpl/monobook/user/Monobook.css";
		/*]]>*/</style>
    <!--[if lt IE 5.5000]><style type="text/css">@import "/lib/tpl/monobook/monobook/IE50Fixes.css";</style><![endif]-->
    <!--[if IE 5.5000]><style type="text/css">@import "/lib/tpl/monobook/monobook/IE55Fixes.css";</style><![endif]-->
    <!--[if IE 6]><style type="text/css">@import "/lib/tpl/monobook/monobook/IE60Fixes.css";</style><![endif]-->
    <!--[if IE 7]><style type="text/css">@import "/lib/tpl/monobook/monobook/IE70Fixes.css";</style><![endif]-->
    <!--[if lt IE 7]><script type="text/javascript" src="/lib/tpl/monobook/common/IEFixes.js"></script>

    <meta http-equiv="imagetoolbar" content="no" /><![endif]-->
	</head>
	<body class="mediawiki ns-0 ltr">
		<div id="globalWrapper">
			<div id="column-content">
				<div id="content">
					<a name="top" id="top"></a>
					<div id="siteNotice">


<h1><a name="welcome_to_the_ptokax_wiki" id="welcome_to_the_ptokax_wiki">Welcome to the PtokaX Wiki!</a></h1>
<div class="level1">
<hr>

This wiki is devoted to let users share information on the great hubsoft <a href="http://www.ptokax.org/" class="urlextern" target="_blank" title="http://www.ptokax.org/" rel="nofollow">PtokaX</a>. However, it is not limited to PtokaX, it is destined to share and discuss information on different parts of the LUA programming language, but the site is NOT intended to be a replacement for the <a href="http://luaboard.sytes.net/" class="urlextern" target="_blank" title="http://luaboard.sytes.net/" rel="nofollow">primary LUA Board aka the PtokaX Portal</a>, nor the <a href="http://lua.uknnet.com/" class="urlextern" target="_blank" title="http://lua.uknnet.com/" rel="nofollow">secondary LUA Board</a> or the <a href="http://scriptdb.ptokax.ath.cx/" class="urlextern" target="_blank" title="http://scriptdb.ptokax.ath.cx/" rel="nofollow">PtokaX resources</a>.
<p>
If you’re not familiar with wikis then in short: they are user-contributed sites: pages can be edited by (almost) anyone. As such, there is always kind of up-to-date and (hopefully) proper content. They are better than forums, since relevant pieces of information are on the same page. Do not hesitate to share your knowledge, and we all hope you can learn and teach a lot here!  — <em><a href="mailto:bastyaelvtars@gmail.com" class="mail JSnocheck" title="bastyaelvtars@gmail.com">bastya_elvtars</a></em>
</p>
<hr>
<hr>

</div>

</div>					<div id="bodyContent">
						<div class="dokuwiki">
							<!-- start content -->
														<div id="catlinks"><p class="catlinks"><span class="bchead">Trace:</span> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/s2s" class="breadcrumbs" title="misc:dcprotocol:s2s">s2s</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/experimental" class="breadcrumbs" title="misc:dcprotocol:experimental">experimental</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/lock2key" class="breadcrumbs" title="misc:dcprotocol:lock2key">lock2key</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/createlock" class="breadcrumbs" title="misc:dcprotocol:createlock">createlock</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/intro" class="breadcrumbs" title="misc:dcprotocol:intro">Introduction</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2c_handshake" class="breadcrumbs" title="misc:dcprotocol:c2c_handshake">Client to Client HandShake</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s_login" class="breadcrumbs" title="misc:dcprotocol:c2s_login">Client to Server Login</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/s2rs_hubreg" class="breadcrumbs" title="misc:dcprotocol:s2rs_hubreg">Server to Hub Registration Server Communication</a> <span class="bcsep">»</span> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2c" class="breadcrumbs" title="misc:dcprotocol:c2c">Command Types (client to client)</a> <span class="bcsep">»</span> <span class="curid"><a href="./Command Types (client to server) - WikiPx_files/Command Types (client to server) - WikiPx.htm" class="breadcrumbs" title="misc:dcprotocol:c2s">Command Types (client to server)</a></span></p></div><div id="qsearch__out" class="ajax_qsearch JSpopup"></div>
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header" style="cursor: pointer;"><span id="toc__toggle" class="toc_close" style="cursor: pointer;"><span>−</span></span>Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="level1"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#command_types_client_to_server" class="toc">Command Types (client to server)</a></span></div>
<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#getnicklist" class="toc">$GetNickList</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#myinfo_client_to_server" class="toc">$MyINFO (Client to Server)</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#getinfo" class="toc">$GetINFO</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#connecttome" class="toc">$ConnectToMe</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#multiconnecttome" class="toc">$MultiConnectToMe</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#revconnecttome" class="toc">$RevConnectToMe</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#to" class="toc">$To</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#section" class="toc">&lt; &gt;</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#quit" class="toc">$Quit</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#opforcemove" class="toc">$OpForceMove</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#kick" class="toc">$Kick</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#search_-_active_clients" class="toc">$Search - Active clients</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#search_-_passive_clients" class="toc">$Search - Passive clients</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#multisearch" class="toc">$MultiSearch</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s#sr_-_passive_search_result" class="toc">$SR - Passive search result</a></span></div></li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->



<h1><a name="command_types_client_to_server" id="command_types_client_to_server">Command Types (client to server)</a></h1>
<div class="level1">

<p>

Direct Connect uses TCP for client to server communication.
The following section describes the format of the Commands, Each field is denoted with &lt; &gt;.
The fields in the command are separated by a single space character (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> 32).
And each Command ends with a | (pipe). All Commands are case sensitive.
$Hello
</p>

<p>
Shortly after a new user, <code>&lt;nick&gt;</code> logs in, the server must send,

</p>
<pre class="code">  $Hello &lt;nick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is the nick of a recently logged in user.</div>
</li>
</ul>

<p>

This indicates <code>&lt;nick&gt;</code> has logged in. If the new user is an operator, the server must additionally send a <code>$OpList</code> command to all users (documented at <code>$GetNickList</code>).
</p>

<p>
Each client should add <code>Code Text</code>&lt;nick&gt; to its list of hub users and, if <code>$OpList</code> is also received, update its list of operators. The new client must reply:

</p>
<pre class="code">  $Version &lt;version&gt;</pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;version&gt;</code> is 1.0091 by default.</div>
</li>
</ul>

</div>

<h2><a name="getnicklist" id="getnicklist">$GetNickList</a></h2>
<div class="level2">

<p>

To obtain a list of other users' nicks, the client may send,

</p>
<pre class="code">  $GetNickList </pre>

<p>

to which the server must reply,

</p>
<pre class="code">  $NickList &lt;nick1&gt;$$&lt;nick2&gt;$$&lt;nick3&gt;$$...
  $OpList &lt;op1&gt;$$&lt;op2&gt;$$&lt;op3&gt;$$... </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick1&gt;</code>, <code>&lt;nick2&gt;</code>, <code>&lt;nick3&gt;</code>, … compose a $$-separated list of hub users' nicks (including operators). After the final nick there is a $$.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;op1&gt;$$&lt;op2&gt;$$&lt;op3&gt;$$…</code> is a $$-separated list of connected users that are operators. After the final nick there is a $$. This list is a subset of the $NickList. If there are no connected operators, the server must send ”<code>$OpList</code> ”</div>
</li>
</ul>

<p>

If a client receives a <code>$OpList</code> command listing its own nick, it should enable the “Redirect User” and “Kick” functions.

</p>

</div>

<h2><a name="myinfo_client_to_server" id="myinfo_client_to_server">$MyINFO (Client to Server)</a></h2>
<div class="level2">

<p>

Shortly after logging in, the client must send,

</p>
<pre class="code">  $MyINFO $ALL &lt;nick&gt; &lt;interest&gt;$ $&lt;speed&gt;$&lt;e-mail&gt;$&lt;sharesize&gt;$ </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is the client's nick.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;interest&gt;</code> is a string describing the user's interest and may be empty (All characters except $ and | are allowed).</div>
</li>
<li class="level2"><div class="li"> <code>&lt;speed&gt;</code> is a string describing the client's internet connection selected from “56Kbps”, “Satellite”, “DSL”, “Cable”, “LAN(T1)”, and “LAN(T3)” followed by a byte indicating the speed class. The value of the byte is selected from at least 1 for 56Kbps, 3 for cable or DSL, or 7, also for DSL.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;e-mail&gt;</code> is nick's e-mail address and may be ””.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;sharesize&gt;</code> is the number of bytes this client shares as a string.</div>
</li>
</ul>

<p>

The max size of the description is chosen by the hub implementation. (see <code>$ValidateNick</code> in <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2s_login" class="wikilink1" title="misc:dcprotocol:c2s_login">Client to Server Login</a>)
NOTE: some hub implementations do not consider a client to be in a logged in state before it has sent a <code>$MyINFO</code>. this is the correct behaviour, and the NMDC hub is flawed in this respect.
</p>

<p>
The server must pass this message to all users of the hub, including the sender. The client is expected to send this again if the information changes. SX says that the last byte of the speed is selected from the ascii values of 1 for normal, 2 for away, 3 also for away, 4 for fileserver, 5 also for fileserver, 6 for fileserver away, 7 also for fileserver away, 8 for fireball, 9 also for fireball, 10 for fireball away, and 11 also for fireball away.

</p>

</div>

<h2><a name="getinfo" id="getinfo">$GetINFO</a></h2>
<div class="level2">

<p>

To obtain detailed information about a specific user, the client may send,

</p>
<pre class="code">  $GetINFO &lt;othernick&gt; &lt;nick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is this sending client's nick.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;othernick&gt;</code> is the nick of the user that &lt;nick&gt; wants to know about.</div>
</li>
</ul>

<p>

The server must respond with exactly the <code>$MyINFO</code> command sent by <code>&lt;othernick&gt;</code> to the server. I don't know what to do if <code>&lt;othernick&gt;</code> has not sent a <code>$MyINFO</code> command (perhaps he would have never been listed in <code>$GetNickList</code>, in which case the command could be rejected). I don't know what to do if <code>&lt;othernick&gt;</code> doesn't exist.

</p>

</div>

<h2><a name="connecttome" id="connecttome">$ConnectToMe</a></h2>
<div class="level2">

<p>

The client may send <code>$ConnectToMe</code> to cause a peer to initiate a peer-to-peer connection for the purpose of transfering data.

</p>
<pre class="code">  $ConnectToMe &lt;remoteNick&gt; &lt;senderIp&gt;:&lt;senderPort&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;senderIp&gt;</code> and <code>&lt;senderPort&gt;</code> are the host and port that the client wishes <code>&lt;remoteNick&gt;</code> to connect to.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;remoteNick&gt;</code> is the remote user that should initiate the connection.</div>
</li>
</ul>

<p>

The server sends this message unaltered to <code>&lt;remotenick&gt;</code>. <code>&lt;remotenick&gt;</code> must open a TCP connection to <code>&lt;senderIp&gt;:&lt;senderPort&gt;</code>.

</p>

</div>

<h2><a name="multiconnecttome" id="multiconnecttome">$MultiConnectToMe</a></h2>
<div class="level2">

<p>

The client may send this instead of the <code>$ConnectToMe</code> to cause a peer on another hub to initiate a peer-to-peer connection for the purpose of transfering data. This is an extension for multiple hubs, which I'm not worried about yet.

</p>
<pre class="code">  $MultiConnectToMe &lt;nick&gt; &lt;senderIp&gt;:&lt;senderPort&gt; &lt;linkedserverip&gt;:&lt;linkedserverport&gt; </pre>

</div>

<h2><a name="revconnecttome" id="revconnecttome">$RevConnectToMe</a></h2>
<div class="level2">

<p>

A passive client may send this to cause a peer to send a $ConnectToMe back.

</p>
<pre class="code">  $RevConnectToMe &lt;nick&gt; &lt;remoteNick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is the sender of the message.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;remoteNick&gt;</code> is the user which should send to $ConnectToMe.</div>
</li>
</ul>

<p>

The server must send this message unmodified to <code>&lt;remoteNick&gt;</code>. If <code>&lt;remoteNick&gt;</code> is an active client, it must send a <code>$ConnectToMe</code> to <code>&lt;nick&gt;</code>. If not, it will reply with <code>$RevConnectToMe</code>. The clients will no longer connect to each other because they are both in passive mode.

</p>

</div>

<h2><a name="to" id="to">$To</a></h2>
<div class="level2">

<p>

The client may send $To to send a private message to a peer.

</p>
<pre class="code">  $To: &lt;othernick&gt; From: &lt;nick&gt; $&lt;&lt;nick&gt;&gt; &lt;message&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;othernick&gt;</code> is the peer who should receive the message.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;nick&gt;</code> is the sender's nick (both instances).</div>
</li>
<li class="level2"><div class="li"> <code>&lt;message&gt;</code> is the text of the message (spaces permitted).</div>
</li>
</ul>

<p>

The server must pass the message unmodified to client <code>&lt;othernick&gt;</code> which must display the message to the user.

</p>

</div>

<h2><a name="section" id="section">&lt; &gt;</a></h2>
<div class="level2">

<p>

The client may send <code>&lt; &gt;</code> to send a public chat message to all hub users.

</p>
<pre class="code">  &lt;&lt;nick&gt;&gt; &lt;message&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is this sender's nick.</div>
</li>
</ul>

<p>

The server must pass the message unmodified to all other clients including <code>&lt;nick&gt;</code>.

</p>

</div>

<h2><a name="quit" id="quit">$Quit</a></h2>
<div class="level2">

<p>

The hub should send $Quit to all users in the hub to let them know the users has disconnected.

</p>
<pre class="code">  $Quit &lt;nick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is the sender's nick.</div>
</li>
</ul>

<p>

The client must then close the socket. The server must send this message to all users when it is received from a client, or when a client connection is lost. Each client should remove <code>&lt;nick&gt;</code> from its list of hub users.

</p>

</div>

<h2><a name="opforcemove" id="opforcemove">$OpForceMove</a></h2>
<div class="level2">

<p>

An op may send a $OpForceMove to cause a client to move to a different server.

</p>
<pre class="code">  $OpForceMove $Who:&lt;victimNick&gt;$Where:&lt;newIp&gt;$Msg:&lt;reasonMsg&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;victimNick&gt;</code> is the nick that will be asked to move.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;newHub&gt;</code> is the IP address (and optional colon-separated port) of another hub that the user should move to.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;reasonMsg&gt;</code> is the reason provided to <code>&lt;victimNick&gt;</code>.</div>
</li>
</ul>

<p>

On receiving this, the server must send to <code>&lt;victimNick&gt;</code>,

</p>
<pre class="code">  $ForceMove &lt;newIp&gt;
  $To: &lt;victimNick&gt; From: &lt;senderNick&gt; $&lt;&lt;senderNick&gt;&gt; You are being re-directed to &lt;newHub&gt; because: &lt;reasonMsg&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;senderNick&gt;</code> is the nick that sent the <code>$OpForceMove</code>.</div>
</li>
</ul>

<p>

In addition to displaying the message, <code>&lt;victimNick&gt;</code> must disconnect from the server and connect to <code>&lt;newIp&gt;</code>. The server should not disconnect the client. I'm not sure if the client should send <code>$Quit</code> or if it should simply close the socket.

</p>

</div>

<h2><a name="kick" id="kick">$Kick</a></h2>
<div class="level2">

<p>

Ops may send $Kick to cause the hub to disconnect a user.

</p>
<pre class="code">  $Kick &lt;victimNick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;victimNick&gt;</code> is the nick of the user to disconnect.</div>
</li>
</ul>

<p>

The server must disconnect <code>&lt;victimNick&gt;</code>. The user is notified with the <code>$To</code> command.

</p>

</div>

<h2><a name="search_-_active_clients" id="search_-_active_clients">$Search - Active clients</a></h2>
<div class="level2">

<p>

Clients are either “active”, indicating they are on the Internet and can receive data directly from peers, or “passive”, in which case they can communicate only through the existing connection to the server. To perform a search, an active client can send,

</p>
<pre class="code">  $Search &lt;clientip&gt;:&lt;clientport&gt; &lt;searchstring&gt;
  i.e. $Search 64.78.55.32:412 T?T?500000?1?madonna$ray </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;clientip&gt;</code> is this client's IP address.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;clientport&gt;</code> is a UDP port on which the client is listening for responses.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;searchstring&gt;</code> is a string describing the file the client is searching for.</div>
</li>
</ul>

<p>

<code>&lt;searchstring&gt;</code> is made up of

</p>
<pre class="code">  &lt;sizerestricted&gt;?&lt;isminimumsize&gt;?&lt;size&gt;?&lt;datatype&gt;?&lt;searchpattern&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;sizerestricted&gt;</code> is T if the search should be restricted to files of a minimum or maximum size, otherwise F.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;isminimumsize&gt;</code> is F if <code>&lt;sizerestricted&gt;</code> is F or if the size restriction places an upper limit on file size, otherwise T.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;size&gt;</code> is the minimum or maximum size of the file to report (according to <code>&lt;isminimumsize&gt;</code>) if <code>&lt;sizerestricted&gt;</code> is T, otherwise 0.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;datatype&gt;</code> restricts the search to files of a particular type. It is an integer selected from:</div>
<ul>
<li class="level5"><div class="li"> 1 for any file type</div>
</li>
<li class="level5"><div class="li"> 2 for audio files (“mp3”, “mp2”, “wav”, “au”, “rm”, “mid”, “sm”)</div>
</li>
<li class="level5"><div class="li"> 3 for compressed files (“zip”, “arj”, “rar”, “lzh”, “gz”, “z”, “arc”, “pak”)</div>
</li>
<li class="level5"><div class="li"> 4 for documents (“doc”, “txt”, “wri”, “pdf”, “ps”, “tex”)</div>
</li>
<li class="level5"><div class="li"> 5 for executables (“pm”, “exe”, “bat”, “com”)</div>
</li>
<li class="level5"><div class="li"> 6 for pictures (“gif”, “jpg”, “jpeg”, “bmp”, “pcx”, “png”, “wmf”, “psd”)</div>
</li>
<li class="level5"><div class="li"> 7 for video (“mpg”, “mpeg”, “avi”, “asf”, “mov”)</div>
</li>
<li class="level5"><div class="li"> 8 for folders</div>
</li>
</ul>
</li>
<li class="level2"><div class="li"> <code>&lt;searchpattern&gt;</code> is used other users to determine if any files match. It is of the form:</div>
</li>
</ul>
<pre class="code">        &lt;term1&gt;$&lt;term2&gt;$&lt;term3&gt;$...$ </pre>
<pre class="code">    where ''&lt;term1&gt;'', ''&lt;term2&gt;'', ... are search terms; normally, each search term is a space-delimited word entered by the user. Each search term is followed by a $, and after the last search term there is a total of two $.</pre>

<p>

The server must forward this message unmodified to all the other users. Every other user with one or more matching files must send one UDP packet to <code>&lt;clientip&gt;:&lt;clientport&gt;</code> for each match containing just the message,

</p>
<pre class="code">  $SR &lt;nick&gt; &lt;searchresponse&gt; &lt;hubip&gt;:&lt;hubport&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;nick&gt;</code> is the nick of the user with the file.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;hubip&gt;:&lt;hubport&gt;</code> are the values sent in the $Search command.</div>
</li>
</ul>

<p>

<code>&lt;searchresponse&gt;</code> is made up of

</p>
<pre class="code">  &lt;filenamewithpath&gt;&lt;filesizeinbytes&gt; &lt;current openslots&gt;/&lt;allopenslots&gt;&lt;hubname&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;filenamewithpath&gt;</code> is the location of the file on the remote client.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;filesizeinbytes&gt;</code> is the size of the file found.</div>
</li>
<li class="level2"><div class="li"> &lt;current openslots&gt; is the number of free slots the remote client has available.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;allopenslots&gt;</code> is the total number of slots the remote client has available.</div>
</li>
<li class="level2"><div class="li"> “” is the ascii character 5.</div>
</li>
</ul>

<p>

Note: When the client sends the <code>$SR</code> command to the server it adds <code>&lt;ClientsNick&gt;</code> to the end of <code>&lt;searchresponse&gt;</code>.

</p>

</div>

<h2><a name="search_-_passive_clients" id="search_-_passive_clients">$Search - Passive clients</a></h2>
<div class="level2">

<p>

To search the network for files matching a search term, a passive client may send,

</p>
<pre class="code">  $Search Hub:&lt;searchingNick&gt; &lt;searchstring&gt; </pre>

<p>

The server must forward this message unmodified to all the other users. Every other user with one or more matching files must send to the server,

</p>
<pre class="code">  $SR &lt;resultNick&gt; &lt;filepath&gt;&lt;filesize&gt; &lt;freeslots&gt;/&lt;totalslots&gt;&lt;hubname&gt; (&lt;hubhost&gt;[:&lt;hubport&gt;])^E&lt;searchingNick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;resultNick&gt;</code> is the nick of the user reporting the result.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;filepath&gt;</code> is the path and file name of the matching file on <code>&lt;resultNick&gt;</code>'s computer. Eventually, <code>&lt;searchingNick&gt;</code> will pass this string unmodified to &lt;resultNick&gt; to download the file.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;filesize&gt;</code> is the integer size of the file in bytes.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;freeslots&gt;</code> and <code>&lt;totalslots&gt;</code> is <code>&lt;resultNick&gt;</code>'s number of free slots and total slots, respectively.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;hubname&gt;</code> is the name of the hub from which the query arrived.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;hubhost&gt;</code> and <code>&lt;hubport&gt;</code> are the hostname and port of the hub as perceived by <code>&lt;resultNick&gt;</code> (if :&lt;hubport&gt; is omitted, it is taken to be 411).</div>
</li>
<li class="level2"><div class="li"> <code>&lt;searchingNick&gt;</code> is the nick that initiated the search and is the same as in the $Search command.</div>
</li>
<li class="level2"><div class="li">  is the ascii character 5.</div>
</li>
</ul>

<p>

The server must pass the <code>$SR</code> message unmodified to <code>&lt;searchingNick&gt;</code>.

</p>

</div>

<h2><a name="multisearch" id="multisearch">$MultiSearch</a></h2>
<div class="level2">

<p>

This is takes the same parameters as $Search (both active and passive) and behaves exactly as $Search, except the hub must additionally pass the search request to the other hubs in the cluster using the hub-to-hub $Search command.

</p>

</div>

<h2><a name="sr_-_passive_search_result" id="sr_-_passive_search_result">$SR - Passive search result</a></h2>
<div class="level2">

<p>

Replies to passive search requests are sent through the server. Compare the <code>$SR</code> in <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/c2c" class="wikilink1" title="misc:dcprotocol:c2c">Command Types (client to client)</a>.

</p>
<pre class="code">  $SR &lt;replynick&gt; &lt;searchresponse&gt;&lt;searchnick&gt; </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;replynick&gt;</code> is the nick of the user with the file.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;searchnick&gt;</code> is the nick of the user who did the query.</div>
</li>
<li class="level2"><div class="li">  is the ascii character 5.</div>
</li>
</ul>

<p>

<code>&lt;searchresponse&gt;</code> is made up of

</p>
<pre class="code">  &lt;filenamewithpath&gt;&lt;filesizeinbytes&gt; &lt;current openslots&gt;/&lt;allopenslots&gt;&lt;hubname&gt; (&lt;hubip&gt;) </pre>
<ul>
<li class="level1"><div class="li"> <code>&lt;filenamewithpath&gt;</code> is the location of the file on the remote client.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;filesizeinbytes&gt;</code> is the size of the file found.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;current openslots&gt;</code> is the number of free slots the remote client has available.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;allopenslots&gt;</code> is the total number of slots the remote client has available.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;hubname&gt;</code> is the name of the hub on which the respondent recieved the passive search request.</div>
</li>
<li class="level2"><div class="li"> <code>&lt;hubip&gt;</code> is the IP address of the hub. Note that is does not have a port number (at least DC++ does not send one).</div>
</li>
<li class="level2"><div class="li">  is the ascii character 5.</div>
</li>
</ul>

<p>

The search result should be forwarded to <code>&lt;searchnick&gt;</code>, but without the <code>&lt;searchnick&gt;</code> at the end. 

</p>

</div>

<br>
							<div id="catlinks"><p class="catlinks"><span class="bchead">You are here: </span><a href="http://wiki.ptokax.ch/doku.php/homepage" title="homepage">About the Wiki</a> » <a href="http://wiki.ptokax.ch/doku.php/misc/homepage" title="misc:homepage" class="wikilink2" rel="nofollow">misc</a> » <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/homepage" title="misc:dcprotocol:homepage" class="wikilink2" rel="nofollow">dcprotocol</a> » <a href="./Command Types (client to server) - WikiPx_files/Command Types (client to server) - WikiPx.htm" title="misc:dcprotocol:c2s">Command Types (client to server)</a></p></div>							<!-- end content -->
							<div class="visualClear"></div>
						</div>
					</div>
				</div>
			</div>

			<div id="column-one">
				<div class="portlet" id="p-logo">
					<a style="background-image: url(/lib/tpl/monobook/user/logo.png);" href="http://wiki.ptokax.ch/" accesskey="h" title="[ALT+H]">
					</a>
				</div>

				<div id="p-cactions" class="portlet"> <h5>Views</h5>   <ul>
<li id="ca-nstab-main" class="selected"><span class="curid"><a href="./Command Types (client to server) - WikiPx_files/Command Types (client to server) - WikiPx.htm" class="wikilink1" title="misc:dcprotocol:c2s">Article</a></span></li>
<li id="ca-talk"><a href="http://wiki.ptokax.ch/doku.php/talk/misc/dcprotocol/c2s" class="wikilink2" title="talk:misc:dcprotocol:c2s" rel="nofollow">Discussion</a></li>
<li id="ca-edit"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&do=edit&rev=" accesskey="e" title="[ALT+E]">Show pagesource</a></li>
<li id="ca-history"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&do=revisions" accesskey="o" title="[ALT+O]">Old revisions</a></li>
   </ul>
</div><div id="p-x-navigation" class="portlet"> <h5>Navigation</h5><div class="pBody">





<h3><a name="scripting_help" id="scripting_help">Scripting help</a></h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/tables" class="wikilink1" title="scriptinghelp:tables">Help on tables/arrays</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/strings" class="wikilink1" title="scriptinghelp:strings">Help on the LUA5 string library</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/ptokaxapi" class="wikilink1" title="scriptinghelp:ptokaxapi">Help on the old PtokaX LUA API (OBSOLETE)</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/ptokaxapi2" class="wikilink1" title="scriptinghelp:ptokaxapi2">Help on the new PtokaX LUA API v.2</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/api2tips" class="wikilink1" title="scriptinghelp:api2tips">Tips for API 2 scripting</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/api2examples" class="wikilink1" title="scriptinghelp:api2examples">API 2 Example Scripts</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/pxwsa" class="wikilink1" title="scriptinghelp:pxwsa">The PtokaX WSA (socket) library (OBSOLETE)</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/metatables_and_metamethods" class="wikilink1" title="scriptinghelp:metatables_and_metamethods">Metatables and metamethods</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/file_manipulation" class="wikilink1" title="scriptinghelp:file_manipulation">File manipulation</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/scriptinghelp/osdate" class="wikilink1" title="scriptinghelp:osdate">Help on the Operating System Lua Library functions</a></div>
</li>
</ul>

</div>

<h3><a name="setting_up_using_the_hubsoft" id="setting_up_using_the_hubsoft">Setting up &amp; using the hubsoft</a></h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/compile_and_setting_debian_bugbuntu" class="wikilink1" title="settingup:compile_and_setting_debian_bugbuntu">Compile and setup on Debian/Ubuntu</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/compile_and_setting_centos" class="wikilink1" title="settingup:compile_and_setting_centos">Compile and setup on CentOS</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/compile_and_setting_freebsd" class="wikilink1" title="settingup:compile_and_setting_freebsd">Compile and setup on FreeBSD</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/setting_up_new_ptokax" class="wikilink1" title="settingup:setting_up_new_ptokax">Setting up PtokaX</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/running_and_using_ptokax" class="wikilink2" title="settingup:running_and_using_ptokax" rel="nofollow">Running and using PtokaX</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/service_install_guide" class="wikilink1" title="settingup:service_install_guide">PtokaX Service Install Guide</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/settingup/setting_up_ptokax" class="wikilink1" title="settingup:setting_up_ptokax">Setting up the 0.3.x versions of PtokaX (OBSOLETE)</a></div>
</li>
</ul>

</div>

<h3><a name="changelogs" id="changelogs">Changelogs</a></h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/changelogs/ptokax/main" class="wikilink1" title="changelogs:ptokax:main">PtokaX</a></div>
</li>
</ul>

</div>

<h3><a name="miscellaneous" id="miscellaneous">Miscellaneous</a></h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/misc/using_svn" class="wikilink1" title="misc:using_svn">Using SVN</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/misc/editors" class="wikilink1" title="misc:editors">Text editors for coding LUA</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://wiki.ptokax.ch/doku.php/misc/dcprotocol/intro" class="wikilink1" title="misc:dcprotocol:intro">DC Protocol Documentation</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://pxlua.pastebin.com/" class="urlextern" target="_blank" title="http://pxlua.pastebin.com/" rel="nofollow">Page to highlight your source at when you are in a discussion on IM/DC++</a></div>
</li>
</ul>

</div>

</div></div>
				<div id="p-personal" class="portlet"> <h5>Personal Tools</h5>  <div class="pBody">   <ul>
<li id="pt-login"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&do=login">Login</a></li>
   </ul>
  </div></div>
<div id="p-search" class="portlet">
    <h5>
        <label>Search</label></h5>
    <div class="pBody">
        <form action="http://wiki.ptokax.ch/doku.php" accept-charset="utf-8" id="dw__search" name="search">
            <input type="hidden" name="do" value="search">
            <input id="qsearch__in" name="id" type="text" accesskey="f" value="">
            <input type="button" class="searchButton" id="searchGoButton" value="Go" onclick="document.location.href=&#39;/doku.php?id=&#39; + document.search.qsearch__in.value;">&nbsp;
            <input type="submit" name="fulltext" class="searchButton" value="Search">
        </form>
    </div>
</div>

<div id="p-tb" class="portlet"> <h5>Toolbox</h5>  <div class="pBody">   <ul>
<li id="tb-whatlinkshere"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&do=backlink" rel="nofollow">What links here</a></li>
<li id="tb-upload"><a href="http://wiki.ptokax.ch/lib/exe/mediamanager.php?ns=misc:dcprotocol" rel="nofollow">Upload file</a></li>
<li id="tb-special"><a href="http://wiki.ptokax.ch/doku.php?idx=wiki" rel="nofollow">Special Pages</a></li>
<li id="tb-print"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&rev=1274813516&mbdo=print" rel="nofollow">Printable Version</a></li>
<li id="tb-permanent"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&rev=1274813516" rel="nofollow">Permanent link</a></li>
<li id="tb-cite"><a href="http://wiki.ptokax.ch/doku.php?id=misc:dcprotocol:c2s&rev=1274813516&mbdo=cite" rel="nofollow">Cite this Article</a></li>
   </ul>
  </div></div>			</div>
			<!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
<div id="footer">
    <div id="f-poweredbyico">
        <a target="_blank" href="http://wiki.splitbrain.org/wiki:dokuwiki" title="Driven by DokuWiki">
            <img src="./Command Types (client to server) - WikiPx_files/button-dw.png" width="88" height="31" alt="Driven by DokuWiki" border="0"></a></div>
    <div id="f-copyrightico">
        <a target="_blank" href="http://tatewake.com/wiki/projects:monobook_for_dokuwiki" title="Monobook for DokuWiki">
            <img src="./Command Types (client to server) - WikiPx_files/button-mb.png" width="88" height="31" alt="Monobook for DokuWiki" border="0"></a></div>
    <a target="_blank" href="http://wiki.ptokax.ch/feed.php" title="Recent changes RSS feed">
        <img src="./Command Types (client to server) - WikiPx_files/button-rss.png" width="80" height="15" alt="Recent changes RSS feed" border="0"></a> <a target="_blank" href="http://www.php.net/" title="Powered by PHP">
                <img src="./Command Types (client to server) - WikiPx_files/button-php.gif" width="80" height="15" alt="Powered by PHP" border="0"></a> <a target="_blank" href="http://validator.w3.org/check/referer" title="Valid XHTML 1.0">
                        <img src="./Command Types (client to server) - WikiPx_files/button-xhtml.png" width="80" height="15" alt="Valid XHTML 1.0" border="0"></a> <a target="_blank" href="http://jigsaw.w3.org/css-validator/check/referer" title="Valid CSS">
                                <img src="./Command Types (client to server) - WikiPx_files/button-css.png" width="80" height="15" alt="Valid CSS" border="0"></a>
    <ul id="f-list">
        <li id="lastmod">misc/dcprotocol/c2s.txt · Last modified: 25/05/2010@20:51 by bastya_elvtars<br>
        </li>
        <li id="copyright"></li>
        <li id="usermod"><br>
        </li>
    </ul>
</div>
		</div>
<a href="http://wiki.ptokax.ch/doku.php?do=recent" accesskey="r" style="visibility:hidden;" rel="nofollow">&nbsp;</a>
		<img src="./Command Types (client to server) - WikiPx_files/indexer.php" width="1" height="1" alt="">	

</body></html>